@page "/changeablecounter"
@layout CounterLayout
@inject IJSRuntime JSRuntime
@using BlazingExperiments.Client.Services
@inject ILocalStorage LocalStorage
<h2>Counter 2</h2>
<p class="@colorStyle @align">
    <strong>Current count: </strong><input @ref="inputElement" @bind=currentCount  @bind:event="oninput" /> <strong>@currentCount</strong>
    <span hidden="@(currentCount <=10)" class="red-color">Count is too high!</span>
    <span hidden="@(!numberError)" class="red-color">Only digits alowed!</span>
</p>
 <p>
    <button class="btn btn-primary" @onclick="Increase">Increase</button>
</p>


@code {
    private string colorStyle = "blue-color";
    private string align = "left";
    int currentCount = 0;
    bool numberError = false;
    private ElementReference inputElement;


    protected override async Task OnAfterRenderAsync(bool first)
    {
        await JSRuntime.InvokeVoidAsync("blazorFocus.set", inputElement);  
    }


    private void Increase(EventArgs e)
    {
        if (currentCount < 10)
        {
            currentCount++;

        }
    }

    private void KeyHandler(KeyboardEventArgs e)
    {
      
       if (e.Key == "-")
        {
            currentCount = currentCount - 1;
        }
    }



}
