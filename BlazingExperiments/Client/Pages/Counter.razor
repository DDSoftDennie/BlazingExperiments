@page "/counter"
@page "/counter/{CurrentCount:int}"
@layout NestedLayout
@inject NavigationManager uriHelper
@inject IJSRuntime JSRuntime

<h2>Counter 1</h2>

<p class="@colorStyle @align">Current count: @CurrentCount</p>
<button class="btn btn-primary" @onclick="IncrementCount" disabled="@(CurrentCount >=1000)">Click me</button> 
<button class="btn btn-success" @onclick="StartFrom50">Start From 50</button>
<p>
    <br/>
</p>
<p>
    <a class="btn btn-primary" href="/">Home</a> <a class="btn btn-secondary" href="/changeablecounter">Counter 2</a> <a class="btn btn-secondary" href="/ThirdCounter">Counter 3</a>
</p>

@code {

     protected override async Task OnInitializedAsync()
    {
        try
        {
            int? c = await JSRuntime.InvokeAsync<int?>("blazorLocalStorage.get", nameof(CurrentCount));
            if (c.HasValue)
            {
                currentCount = c.Value;
            }
        }
        catch{}
    }

    private string colorStyle = "blue-color";
    private string align = "left";
    private int currentCount = 0;

    [Parameter]
    public int CurrentCount {
        get => currentCount;
        set
        {
            if (currentCount != value)
            {
                currentCount = value;
                JSRuntime.InvokeAsync<string>("blazorLocalStorage.set", nameof(CurrentCount), currentCount);
            }
        }
    }

   
    private void IncrementCount()
    {
        CurrentCount++;
        colorStyle = CurrentCount >= 100 ? colorStyle = "red-color" : "blue-color";
        align = CurrentCount % 2 == 0 ? align = "left" : "right";
    }

    private void StartFrom50() => uriHelper.NavigateTo("/counter/50");
}
